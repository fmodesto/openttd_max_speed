grf {
	grfid: "FM\01\02";
	name: string(STR_GRF_NAME);
	desc: string(STR_GRF_DESC);
	version: 80;
	min_compatible_version: 68;

	param 0 {
		uni1_penalty {
			type: int;
			name: string(STR_PARAM_UNI1);
			desc: string(STR_PARAM_PURR_DESC);
			min_value: 0;
			max_value: 350;
			def_value: 0;
		}
	}
	param 1 {
		uni2_penalty {
			type: int;
			name: string(STR_PARAM_UNI2);
			desc: string(STR_PARAM_PURR_DESC);
			min_value: 0;
			max_value: 350;
			def_value: 5;
		}
	}
	param 2 {
		uni3_penalty {
			type: int;
			name: string(STR_PARAM_UNI3);
			desc: string(STR_PARAM_PURR_DESC);
			min_value: 0;
			max_value: 350;
			def_value: 10;
		}
	}
	param 3 {
		uni4_penalty {
			type: int;
			name: string(STR_PARAM_UNI4);
			desc: string(STR_PARAM_PURR_DESC);
			min_value: 0;
			max_value: 350;
			def_value: 15;
		}
	}
	param 4 {
		uni5_penalty {
			type: int;
			name: string(STR_PARAM_UNI5);
			desc: string(STR_PARAM_PURR_DESC);
			min_value: 0;
			max_value: 350;
			def_value: 20;
		}
	}
	param 5 {
		rail_penalty {
			type: int;
			name: string(STR_PARAM_RAIL);
			desc: string(STR_PARAM_ORIG_DESC);
			min_value: 0;
			max_value: 50;
			def_value: 0;
		}
	}
	param 6 {
		elrl_penalty {
			type: int;
			name: string(STR_PARAM_ELRL);
			desc: string(STR_PARAM_ORIG_DESC);
			min_value: 0;
			max_value: 150;
			def_value: 0;
		}
	}
	param 7 {
		mono_penalty {
			type: int;
			name: string(STR_PARAM_MONO);
			desc: string(STR_PARAM_ORIG_DESC);
			min_value: 0;
			max_value: 250;
			def_value: 0;
		}
	}
	param 8 {
		mglv_penalty {
			type: int;
			name: string(STR_PARAM_MGLV);
			desc: string(STR_PARAM_ORIG_DESC);
			min_value: 0;
			max_value: 350;
			def_value: 0;
		}
	}
}

railtypetable {
	RAIL, ELRL, MONO, MGLV, UNI1, UNI2, UNI3, UNI4, UNI5
}

// Kirby Paul Tank (Steam)
switch(FEAT_TRAINS, SELF, train0_speed, current_railtype) {
RAIL: 64 - rail_penalty;
UNI1: max(10, 64 - rail_penalty - uni1_penalty);
UNI2: max(10, 64 - rail_penalty - uni2_penalty);
UNI3: max(10, 64 - rail_penalty - uni3_penalty);
UNI4: max(10, 64 - rail_penalty - uni4_penalty);
UNI5: max(10, 64 - rail_penalty - uni5_penalty);
64 - rail_penalty;
}

item(FEAT_TRAINS, train0, 0) {
    graphics {
        speed: train0_speed;
    }
}

// MJS 250 (Diesel)
switch(FEAT_TRAINS, SELF, train1_speed, current_railtype) {
RAIL: 80 - rail_penalty;
UNI1: max(10, 80 - rail_penalty - uni1_penalty);
UNI2: max(10, 80 - rail_penalty - uni2_penalty);
UNI3: max(10, 80 - rail_penalty - uni3_penalty);
UNI4: max(10, 80 - rail_penalty - uni4_penalty);
UNI5: max(10, 80 - rail_penalty - uni5_penalty);
80 - rail_penalty;
}

item(FEAT_TRAINS, train1, 1) {
    graphics {
        speed: train1_speed;
    }
}

// Ploddyphut Choo-Choo
switch(FEAT_TRAINS, SELF, train2_speed, current_railtype) {
RAIL: 72 - rail_penalty;
UNI1: max(10, 72 - rail_penalty - uni1_penalty);
UNI2: max(10, 72 - rail_penalty - uni2_penalty);
UNI3: max(10, 72 - rail_penalty - uni3_penalty);
UNI4: max(10, 72 - rail_penalty - uni4_penalty);
UNI5: max(10, 72 - rail_penalty - uni5_penalty);
72 - rail_penalty;
}

item(FEAT_TRAINS, train2, 2) {
    graphics {
        speed: train2_speed;
    }
}

// Powernaut Choo-Choo
switch(FEAT_TRAINS, SELF, train3_speed, current_railtype) {
RAIL: 96 - rail_penalty;
UNI1: max(10, 96 - rail_penalty - uni1_penalty);
UNI2: max(10, 96 - rail_penalty - uni2_penalty);
UNI3: max(10, 96 - rail_penalty - uni3_penalty);
UNI4: max(10, 96 - rail_penalty - uni4_penalty);
UNI5: max(10, 96 - rail_penalty - uni5_penalty);
96 - rail_penalty;
}

item(FEAT_TRAINS, train3, 3) {
    graphics {
        speed: train3_speed;
    }
}

// Mightymover Choo-Choo
switch(FEAT_TRAINS, SELF, train4_speed, current_railtype) {
RAIL: 112 - rail_penalty;
UNI1: max(10, 112 - rail_penalty - uni1_penalty);
UNI2: max(10, 112 - rail_penalty - uni2_penalty);
UNI3: max(10, 112 - rail_penalty - uni3_penalty);
UNI4: max(10, 112 - rail_penalty - uni4_penalty);
UNI5: max(10, 112 - rail_penalty - uni5_penalty);
112 - rail_penalty;
}

item(FEAT_TRAINS, train4, 4) {
    graphics {
        speed: train4_speed;
    }
}

// Ploddyphut Diesel
switch(FEAT_TRAINS, SELF, train5_speed, current_railtype) {
RAIL: 120 - rail_penalty;
UNI1: max(10, 120 - rail_penalty - uni1_penalty);
UNI2: max(10, 120 - rail_penalty - uni2_penalty);
UNI3: max(10, 120 - rail_penalty - uni3_penalty);
UNI4: max(10, 120 - rail_penalty - uni4_penalty);
UNI5: max(10, 120 - rail_penalty - uni5_penalty);
120 - rail_penalty;
}

item(FEAT_TRAINS, train5, 5) {
    graphics {
        speed: train5_speed;
    }
}

// Powernaut Diesel
switch(FEAT_TRAINS, SELF, train6_speed, current_railtype) {
RAIL: 152 - rail_penalty;
UNI1: max(10, 152 - rail_penalty - uni1_penalty);
UNI2: max(10, 152 - rail_penalty - uni2_penalty);
UNI3: max(10, 152 - rail_penalty - uni3_penalty);
UNI4: max(10, 152 - rail_penalty - uni4_penalty);
UNI5: max(10, 152 - rail_penalty - uni5_penalty);
152 - rail_penalty;
}

item(FEAT_TRAINS, train6, 6) {
    graphics {
        speed: train6_speed;
    }
}

// Wills 2-8-0 (Steam)
switch(FEAT_TRAINS, SELF, train7_speed, current_railtype) {
RAIL: 88 - rail_penalty;
UNI1: max(10, 88 - rail_penalty - uni1_penalty);
UNI2: max(10, 88 - rail_penalty - uni2_penalty);
UNI3: max(10, 88 - rail_penalty - uni3_penalty);
UNI4: max(10, 88 - rail_penalty - uni4_penalty);
UNI5: max(10, 88 - rail_penalty - uni5_penalty);
88 - rail_penalty;
}

item(FEAT_TRAINS, train7, 7) {
    graphics {
        speed: train7_speed;
    }
}

// Chaney 'Jubilee' (Steam)
switch(FEAT_TRAINS, SELF, train8_speed, current_railtype) {
RAIL: 112 - rail_penalty;
UNI1: max(10, 112 - rail_penalty - uni1_penalty);
UNI2: max(10, 112 - rail_penalty - uni2_penalty);
UNI3: max(10, 112 - rail_penalty - uni3_penalty);
UNI4: max(10, 112 - rail_penalty - uni4_penalty);
UNI5: max(10, 112 - rail_penalty - uni5_penalty);
112 - rail_penalty;
}

item(FEAT_TRAINS, train8, 8) {
    graphics {
        speed: train8_speed;
    }
}

// Ginzu 'A4' (Steam)
switch(FEAT_TRAINS, SELF, train9_speed, current_railtype) {
RAIL: 128 - rail_penalty;
UNI1: max(10, 128 - rail_penalty - uni1_penalty);
UNI2: max(10, 128 - rail_penalty - uni2_penalty);
UNI3: max(10, 128 - rail_penalty - uni3_penalty);
UNI4: max(10, 128 - rail_penalty - uni4_penalty);
UNI5: max(10, 128 - rail_penalty - uni5_penalty);
128 - rail_penalty;
}

item(FEAT_TRAINS, train9, 9) {
    graphics {
        speed: train9_speed;
    }
}

// SH '8P' (Steam)
switch(FEAT_TRAINS, SELF, train10_speed, current_railtype) {
RAIL: 144 - rail_penalty;
UNI1: max(10, 144 - rail_penalty - uni1_penalty);
UNI2: max(10, 144 - rail_penalty - uni2_penalty);
UNI3: max(10, 144 - rail_penalty - uni3_penalty);
UNI4: max(10, 144 - rail_penalty - uni4_penalty);
UNI5: max(10, 144 - rail_penalty - uni5_penalty);
144 - rail_penalty;
}

item(FEAT_TRAINS, train10, 10) {
    graphics {
        speed: train10_speed;
    }
}

// Manley-Morel DMU (Diesel)
switch(FEAT_TRAINS, SELF, train11_speed, current_railtype) {
RAIL: 112 - rail_penalty;
UNI1: max(10, 112 - rail_penalty - uni1_penalty);
UNI2: max(10, 112 - rail_penalty - uni2_penalty);
UNI3: max(10, 112 - rail_penalty - uni3_penalty);
UNI4: max(10, 112 - rail_penalty - uni4_penalty);
UNI5: max(10, 112 - rail_penalty - uni5_penalty);
112 - rail_penalty;
}

item(FEAT_TRAINS, train11, 11) {
    graphics {
        speed: train11_speed;
    }
}

// 'Dash' (Diesel)
switch(FEAT_TRAINS, SELF, train12_speed, current_railtype) {
RAIL: 120 - rail_penalty;
UNI1: max(10, 120 - rail_penalty - uni1_penalty);
UNI2: max(10, 120 - rail_penalty - uni2_penalty);
UNI3: max(10, 120 - rail_penalty - uni3_penalty);
UNI4: max(10, 120 - rail_penalty - uni4_penalty);
UNI5: max(10, 120 - rail_penalty - uni5_penalty);
120 - rail_penalty;
}

item(FEAT_TRAINS, train12, 12) {
    graphics {
        speed: train12_speed;
    }
}

// SH/Hendry '25' (Diesel)
switch(FEAT_TRAINS, SELF, train13_speed, current_railtype) {
RAIL: 128 - rail_penalty;
UNI1: max(10, 128 - rail_penalty - uni1_penalty);
UNI2: max(10, 128 - rail_penalty - uni2_penalty);
UNI3: max(10, 128 - rail_penalty - uni3_penalty);
UNI4: max(10, 128 - rail_penalty - uni4_penalty);
UNI5: max(10, 128 - rail_penalty - uni5_penalty);
128 - rail_penalty;
}

item(FEAT_TRAINS, train13, 13) {
    graphics {
        speed: train13_speed;
    }
}

// UU '37' (Diesel)
switch(FEAT_TRAINS, SELF, train14_speed, current_railtype) {
RAIL: 144 - rail_penalty;
UNI1: max(10, 144 - rail_penalty - uni1_penalty);
UNI2: max(10, 144 - rail_penalty - uni2_penalty);
UNI3: max(10, 144 - rail_penalty - uni3_penalty);
UNI4: max(10, 144 - rail_penalty - uni4_penalty);
UNI5: max(10, 144 - rail_penalty - uni5_penalty);
144 - rail_penalty;
}

item(FEAT_TRAINS, train14, 14) {
    graphics {
        speed: train14_speed;
    }
}

// Floss '47' (Diesel)
switch(FEAT_TRAINS, SELF, train15_speed, current_railtype) {
RAIL: 160 - rail_penalty;
UNI1: max(10, 160 - rail_penalty - uni1_penalty);
UNI2: max(10, 160 - rail_penalty - uni2_penalty);
UNI3: max(10, 160 - rail_penalty - uni3_penalty);
UNI4: max(10, 160 - rail_penalty - uni4_penalty);
UNI5: max(10, 160 - rail_penalty - uni5_penalty);
160 - rail_penalty;
}

item(FEAT_TRAINS, train15, 15) {
    graphics {
        speed: train15_speed;
    }
}

// CS 4000 (Diesel)
switch(FEAT_TRAINS, SELF, train16_speed, current_railtype) {
RAIL: 96 - rail_penalty;
UNI1: max(10, 96 - rail_penalty - uni1_penalty);
UNI2: max(10, 96 - rail_penalty - uni2_penalty);
UNI3: max(10, 96 - rail_penalty - uni3_penalty);
UNI4: max(10, 96 - rail_penalty - uni4_penalty);
UNI5: max(10, 96 - rail_penalty - uni5_penalty);
96 - rail_penalty;
}

item(FEAT_TRAINS, train16, 16) {
    graphics {
        speed: train16_speed;
    }
}

// CS 2400 (Diesel)
switch(FEAT_TRAINS, SELF, train17_speed, current_railtype) {
RAIL: 112 - rail_penalty;
UNI1: max(10, 112 - rail_penalty - uni1_penalty);
UNI2: max(10, 112 - rail_penalty - uni2_penalty);
UNI3: max(10, 112 - rail_penalty - uni3_penalty);
UNI4: max(10, 112 - rail_penalty - uni4_penalty);
UNI5: max(10, 112 - rail_penalty - uni5_penalty);
112 - rail_penalty;
}

item(FEAT_TRAINS, train17, 17) {
    graphics {
        speed: train17_speed;
    }
}

// Centennial (Diesel)
switch(FEAT_TRAINS, SELF, train18_speed, current_railtype) {
RAIL: 112 - rail_penalty;
UNI1: max(10, 112 - rail_penalty - uni1_penalty);
UNI2: max(10, 112 - rail_penalty - uni2_penalty);
UNI3: max(10, 112 - rail_penalty - uni3_penalty);
UNI4: max(10, 112 - rail_penalty - uni4_penalty);
UNI5: max(10, 112 - rail_penalty - uni5_penalty);
112 - rail_penalty;
}

item(FEAT_TRAINS, train18, 18) {
    graphics {
        speed: train18_speed;
    }
}

// Kelling 3100 (Diesel)
switch(FEAT_TRAINS, SELF, train19_speed, current_railtype) {
RAIL: 104 - rail_penalty;
UNI1: max(10, 104 - rail_penalty - uni1_penalty);
UNI2: max(10, 104 - rail_penalty - uni2_penalty);
UNI3: max(10, 104 - rail_penalty - uni3_penalty);
UNI4: max(10, 104 - rail_penalty - uni4_penalty);
UNI5: max(10, 104 - rail_penalty - uni5_penalty);
104 - rail_penalty;
}

item(FEAT_TRAINS, train19, 19) {
    graphics {
        speed: train19_speed;
    }
}

// Turner Turbo (Diesel)
switch(FEAT_TRAINS, SELF, train20_speed, current_railtype) {
RAIL: 160 - rail_penalty;
UNI1: max(10, 160 - rail_penalty - uni1_penalty);
UNI2: max(10, 160 - rail_penalty - uni2_penalty);
UNI3: max(10, 160 - rail_penalty - uni3_penalty);
UNI4: max(10, 160 - rail_penalty - uni4_penalty);
UNI5: max(10, 160 - rail_penalty - uni5_penalty);
160 - rail_penalty;
}

item(FEAT_TRAINS, train20, 20) {
    graphics {
        speed: train20_speed;
    }
}

// MJS 1000 (Diesel)
switch(FEAT_TRAINS, SELF, train21_speed, current_railtype) {
RAIL: 104 - rail_penalty;
UNI1: max(10, 104 - rail_penalty - uni1_penalty);
UNI2: max(10, 104 - rail_penalty - uni2_penalty);
UNI3: max(10, 104 - rail_penalty - uni3_penalty);
UNI4: max(10, 104 - rail_penalty - uni4_penalty);
UNI5: max(10, 104 - rail_penalty - uni5_penalty);
104 - rail_penalty;
}

item(FEAT_TRAINS, train21, 21) {
    graphics {
        speed: train21_speed;
    }
}

// SH '125' (Diesel)
switch(FEAT_TRAINS, SELF, train22_speed, current_railtype) {
RAIL: 200 - rail_penalty;
UNI1: max(10, 200 - rail_penalty - uni1_penalty);
UNI2: max(10, 200 - rail_penalty - uni2_penalty);
UNI3: max(10, 200 - rail_penalty - uni3_penalty);
UNI4: max(10, 200 - rail_penalty - uni4_penalty);
UNI5: max(10, 200 - rail_penalty - uni5_penalty);
200 - rail_penalty;
}

item(FEAT_TRAINS, train22, 22) {
    graphics {
        speed: train22_speed;
    }
}

// SH '30' (Electric)
switch(FEAT_TRAINS, SELF, train23_speed, current_railtype) {
ELRL: 160 - elrl_penalty;
UNI1: max(10, 160 - elrl_penalty - uni1_penalty);
UNI2: max(10, 160 - elrl_penalty - uni2_penalty);
UNI3: max(10, 160 - elrl_penalty - uni3_penalty);
UNI4: max(10, 160 - elrl_penalty - uni4_penalty);
UNI5: max(10, 160 - elrl_penalty - uni5_penalty);
160 - elrl_penalty;
}

item(FEAT_TRAINS, train23, 23) {
    graphics {
        speed: train23_speed;
    }
}

// SH '40' (Electric)
switch(FEAT_TRAINS, SELF, train24_speed, current_railtype) {
ELRL: 176 - elrl_penalty;
UNI1: max(10, 176 - elrl_penalty - uni1_penalty);
UNI2: max(10, 176 - elrl_penalty - uni2_penalty);
UNI3: max(10, 176 - elrl_penalty - uni3_penalty);
UNI4: max(10, 176 - elrl_penalty - uni4_penalty);
UNI5: max(10, 176 - elrl_penalty - uni5_penalty);
176 - elrl_penalty;
}

item(FEAT_TRAINS, train24, 24) {
    graphics {
        speed: train24_speed;
    }
}

// 'T.I.M.' (Electric)
switch(FEAT_TRAINS, SELF, train25_speed, current_railtype) {
ELRL: 240 - elrl_penalty;
UNI1: max(10, 240 - elrl_penalty - uni1_penalty);
UNI2: max(10, 240 - elrl_penalty - uni2_penalty);
UNI3: max(10, 240 - elrl_penalty - uni3_penalty);
UNI4: max(10, 240 - elrl_penalty - uni4_penalty);
UNI5: max(10, 240 - elrl_penalty - uni5_penalty);
240 - elrl_penalty;
}

item(FEAT_TRAINS, train25, 25) {
    graphics {
        speed: train25_speed;
    }
}

// 'AsiaStar' (Electric)
switch(FEAT_TRAINS, SELF, train26_speed, current_railtype) {
ELRL: 264 - elrl_penalty;
UNI1: max(10, 264 - elrl_penalty - uni1_penalty);
UNI2: max(10, 264 - elrl_penalty - uni2_penalty);
UNI3: max(10, 264 - elrl_penalty - uni3_penalty);
UNI4: max(10, 264 - elrl_penalty - uni4_penalty);
UNI5: max(10, 264 - elrl_penalty - uni5_penalty);
264 - elrl_penalty;
}

item(FEAT_TRAINS, train26, 26) {
    graphics {
        speed: train26_speed;
    }
}

// 'X2001' (Electric)
switch(FEAT_TRAINS, SELF, train54_speed, current_railtype) {
MONO: 304 - mono_penalty;
UNI1: max(10, 304 - mono_penalty - uni1_penalty);
UNI2: max(10, 304 - mono_penalty - uni2_penalty);
UNI3: max(10, 304 - mono_penalty - uni3_penalty);
UNI4: max(10, 304 - mono_penalty - uni4_penalty);
UNI5: max(10, 304 - mono_penalty - uni5_penalty);
304 - mono_penalty;
}

item(FEAT_TRAINS, train54, 54) {
    graphics {
        speed: train54_speed;
    }
}

// 'Millennium Z1' (Electric)
switch(FEAT_TRAINS, SELF, train55_speed, current_railtype) {
MONO: 336 - mono_penalty;
UNI1: max(10, 336 - mono_penalty - uni1_penalty);
UNI2: max(10, 336 - mono_penalty - uni2_penalty);
UNI3: max(10, 336 - mono_penalty - uni3_penalty);
UNI4: max(10, 336 - mono_penalty - uni4_penalty);
UNI5: max(10, 336 - mono_penalty - uni5_penalty);
336 - mono_penalty;
}

item(FEAT_TRAINS, train55, 55) {
    graphics {
        speed: train55_speed;
    }
}

// Wizzowow Z99
switch(FEAT_TRAINS, SELF, train56_speed, current_railtype) {
MONO: 320 - mono_penalty;
UNI1: max(10, 320 - mono_penalty - uni1_penalty);
UNI2: max(10, 320 - mono_penalty - uni2_penalty);
UNI3: max(10, 320 - mono_penalty - uni3_penalty);
UNI4: max(10, 320 - mono_penalty - uni4_penalty);
UNI5: max(10, 320 - mono_penalty - uni5_penalty);
320 - mono_penalty;
}

item(FEAT_TRAINS, train56, 56) {
    graphics {
        speed: train56_speed;
    }
}

// Lev1 'Leviathan' (Electric)
switch(FEAT_TRAINS, SELF, train84_speed, current_railtype) {
MGLV: 400 - mglv_penalty;
UNI1: max(10, 400 - mglv_penalty - uni1_penalty);
UNI2: max(10, 400 - mglv_penalty - uni2_penalty);
UNI3: max(10, 400 - mglv_penalty - uni3_penalty);
UNI4: max(10, 400 - mglv_penalty - uni4_penalty);
UNI5: max(10, 400 - mglv_penalty - uni5_penalty);
400 - mglv_penalty;
}

item(FEAT_TRAINS, train84, 84) {
    graphics {
        speed: train84_speed;
    }
}

// Lev2 'Cyclops' (Electric)
switch(FEAT_TRAINS, SELF, train85_speed, current_railtype) {
MGLV: 448 - mglv_penalty;
UNI1: max(10, 448 - mglv_penalty - uni1_penalty);
UNI2: max(10, 448 - mglv_penalty - uni2_penalty);
UNI3: max(10, 448 - mglv_penalty - uni3_penalty);
UNI4: max(10, 448 - mglv_penalty - uni4_penalty);
UNI5: max(10, 448 - mglv_penalty - uni5_penalty);
448 - mglv_penalty;
}

item(FEAT_TRAINS, train85, 85) {
    graphics {
        speed: train85_speed;
    }
}

// Lev3 'Pegasus' (Electric)
switch(FEAT_TRAINS, SELF, train86_speed, current_railtype) {
MGLV: 480 - mglv_penalty;
UNI1: max(10, 480 - mglv_penalty - uni1_penalty);
UNI2: max(10, 480 - mglv_penalty - uni2_penalty);
UNI3: max(10, 480 - mglv_penalty - uni3_penalty);
UNI4: max(10, 480 - mglv_penalty - uni4_penalty);
UNI5: max(10, 480 - mglv_penalty - uni5_penalty);
480 - mglv_penalty;
}

item(FEAT_TRAINS, train86, 86) {
    graphics {
        speed: train86_speed;
    }
}

// Lev4 'Chimaera' (Electric)
switch(FEAT_TRAINS, SELF, train87_speed, current_railtype) {
MGLV: 640 - mglv_penalty;
UNI1: max(10, 640 - mglv_penalty - uni1_penalty);
UNI2: max(10, 640 - mglv_penalty - uni2_penalty);
UNI3: max(10, 640 - mglv_penalty - uni3_penalty);
UNI4: max(10, 640 - mglv_penalty - uni4_penalty);
UNI5: max(10, 640 - mglv_penalty - uni5_penalty);
640 - mglv_penalty;
}

item(FEAT_TRAINS, train87, 87) {
    graphics {
        speed: train87_speed;
    }
}

// Wizzowow Rocketeer
switch(FEAT_TRAINS, SELF, train88_speed, current_railtype) {
MGLV: 480 - mglv_penalty;
UNI1: max(10, 480 - mglv_penalty - uni1_penalty);
UNI2: max(10, 480 - mglv_penalty - uni2_penalty);
UNI3: max(10, 480 - mglv_penalty - uni3_penalty);
UNI4: max(10, 480 - mglv_penalty - uni4_penalty);
UNI5: max(10, 480 - mglv_penalty - uni5_penalty);
480 - mglv_penalty;
}

item(FEAT_TRAINS, train88, 88) {
    graphics {
        speed: train88_speed;
    }
}
